{
	"info": {
		"_postman_id": "b9654877-dd4a-4a6f-8b9e-441491d0bf37",
		"name": "Catalog",
		"description": "- [OAuth Scopes](#oauth-scopes)\n- [Authentication](#authentication)\n- [Differentiating Variants & Modifiers](#variants-and-modifiers)\n- [Available Endpoints](#available-endpoints)\n- [Resources](#resources)\n\nThe Catalog API manages products, brands and categories for a store. To learn more about the Catalog resources see [Catalog Products](https://developer.bigcommerce.com/api-docs/catalog/products-overview) and [Categories](https://developer.bigcommerce.com/api-docs/catalog/products-overview#products-overview_categories).\n\n## OAuth Scopes\n| UI Name  | Permission | Parameter                     |\n|----------|------------|-------------------------------|\n| Products | modify     | `store_v2_products`           |\n| Products | read-only  | `store_v2_products_read_only` |\n\nFor more information on OAuth Scopes, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## Authentication\nRequests can be authenticated by sending a `client_id` and `access_token` via `X-Auth-Client` and `X-Auth-Token` HTTP headers:\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nAccept: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\nFor more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## Differentiating Variants and Modifiers\n[Variants](https://support.bigcommerce.com/s/article/Product-Options-v3#variations) represent a physical product made up of [Product Option](https://support.bigcommerce.com/s/article/Product-Options-v3) choices, i.e. a large blue t-shirt. Each variant can have a unique SKU.\n\nModifiers represent a choice a customer makes about a product that doesn't represent a physical item, i.e. text to be printed on a t-shirt. Assigning a SKU to a modifier will turn it into a variant.\n\nSee [Variant Options](https://developer.bigcommerce.com/api-docs/catalog/products-overview#variant-options) and [Modifier Options](https://developer.bigcommerce.com/api-docs/catalog/products-overview#modifier-options) for more information.\n\n## Available Endpoints\n| Resource / Endpoint                     | Description                                                             |\n|-----------------------------------------|-------------------------------------------------------------------------|\n| Brand Images                            | Create and manage brand images                                          |\n| Brand Metafields                        | Create and manage brand metafields                                      |\n| Brands                                  | Create and manage brands                                                |\n| Catalog                                 | Create and manage store categories, products, and brands                |\n| Categories                              | Create and manage categorties                                           |\n| Category Images                         | Create and manage category images                                       |\n| Category Metafields                     | Create and manage category metafields                                   |\n| Product Bulk Pricing Rules              | Create and manage product bulk pricing rules                            |\n| Product Complex Rules                   | Create and manage product complex rules                                 |\n| Product Custom Fields                   | Create and manage product custom fields                                 |\n| Product Images                          | Create and manage product images                                        |\n| Product Metafields                      | Create and manage product meta fields                                   |\n| Product Modifier Images                 | Create and manage product modifer images                                |\n| Product Modifier Values                 | Create and manage product modifier values                               |\n| Product Modifiers                       | Create and manage product midifiers                                     |\n| Product Reviews                         | Create and manage product reviews                                       |\n| Product Variant Option Values           | Create and manage product variant option values                         |\n| Product Variant Options                 | Create and manage product variant options                               |\n| Product Variants                        | Create and manage product variants                                      |\n| Product Videos                          | Create and manage product videos                                        |\n| Products                                | Create and manage products                                              |\n| ProductVariant Metafields               | Create and manage product meta flields                                  |\n| Variants                                | Get and update all variants                                             |\n\n## Resources\n\n### Webhooks\n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)\n* [Categories](/api-docs/getting-started/webhooks/webhook-events#webhook-events_category)\n* [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)\n\n### Related Endpoints\n* [Catalog API](/api-reference/catalog/catalog-api)\n\nContact Support:\n Name: BigCommerce Developer Documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "catalog",
			"item": [
				{
					"name": "products",
					"item": [
						{
							"name": "{product id}",
							"item": [
								{
									"name": "images",
									"item": [
										{
											"name": "{image id}",
											"item": [
												{
													"name": "Get a Product Image",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images",
																":image_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "image_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Image` that is being operated on.\n"
																}
															]
														},
														"description": "Returns a single *Product Image*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"images",
																		":image_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "image_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"images",
																		":image_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "image_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Product Image",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images",
																":image_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "image_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Image` that is being operated on.\n"
																}
															]
														},
														"description": "Updates a *Product Image*.\n\n **Required Fields**\n- `image_file`, or\n- `image_url`\n\n**Usage Notes**\n- `image_url` - `255` character limit\n- When using file upload, other image file params can be updated using `key:value` pairs. "
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"images",
																		":image_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "image_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"images",
																		":image_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "image_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Product Image",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images",
																":image_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "image_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Image` that is being operated on.\n"
																}
															]
														},
														"description": "Deletes a *Product Image*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/images/:image_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"images",
																		":image_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "image_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Product Images",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/images?page=&limit=&include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"images"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														},
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of *Product Images*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "The product ID does not exist.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There are not any images on this product.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Product Image",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"images"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Product Image*. \n\n **Required Fields**\n- `image_file`, or\n- `image_url`\n\n**Usage Notes**\n- `image_url` - `255` character limit\n- Only one image at a time can be created"
											},
											"response": [
												{
													"name": "The product ID does not exist.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"images"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "videos",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Get a Product Video",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"videos",
																":id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) The BigCommerce ID of the `Video`"
																}
															]
														},
														"description": "Returns a single *Product Video*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"videos",
																		":id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"videos",
																		":id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Product Video",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"videos",
																":id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) The BigCommerce ID of the `Video`"
																}
															]
														},
														"description": "Updates a *Product Video.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id"
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"videos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"videos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Product Video",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"videos",
																":id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) The BigCommerce ID of the `Video`"
																}
															]
														},
														"description": "Deletes a *Product Video*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/videos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"videos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Product Videos",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/videos?include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"videos"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of *Product Videos*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/videos?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"videos"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Product Video",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"videos"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Product Video*.\n\n**Required Fields**\n* video_id - Example: https://www.youtube.com/watch?v=`R12345677`\n\n**Read-Only Fields**\n* id\n\nPublicly accessible URLs are valid parameters.\nVideos must be loaded through YouTube at this time. "
											},
											"response": [
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"videos"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"videos"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "variants",
									"item": [
										{
											"name": "{variant id}",
											"item": [
												{
													"name": "metafields",
													"item": [
														{
															"name": "{metafield id}",
															"item": [
																{
																	"name": "Get Product Variant Metafields",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields",
																				":metafield_id"
																			],
																			"query": [
																				{
																					"key": "include_fields",
																					"value": "",
																					"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																				},
																				{
																					"key": "exclude_fields",
																					"value": "",
																					"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																				}
																			],
																			"variable": [
																				{
																					"key": "metafield_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Metafield`.\n"
																				},
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "variant_id",
																					"value": "schema type not provided",
																					"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																				}
																			]
																		},
																		"description": "Returns a single product variant *Metafield*. Optional parameters can be passed in."
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"variants",
																						":variant_id",
																						"metafields",
																						":metafield_id"
																					],
																					"query": [
																						{
																							"key": "include_fields",
																							"value": ""
																						},
																						{
																							"key": "exclude_fields",
																							"value": ""
																						}
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "variant_id"
																						},
																						{
																							"key": "metafield_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "The resource was not found.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"variants",
																						":variant_id",
																						"metafields",
																						":metafield_id"
																					],
																					"query": [
																						{
																							"key": "include_fields",
																							"value": ""
																						},
																						{
																							"key": "exclude_fields",
																							"value": ""
																						}
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "variant_id"
																						},
																						{
																							"key": "metafield_id"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update Product Variant Metafields",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields",
																				":metafield_id"
																			],
																			"variable": [
																				{
																					"key": "metafield_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Metafield`.\n"
																				},
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "variant_id",
																					"value": "schema type not provided",
																					"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																				}
																			]
																		},
																		"description": "Updates a product variant *Metafield*.\n\n**Required Fields:**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
																	},
																	"response": [
																		{
																			"name": "The resource was not found.\n",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"variants",
																						":variant_id",
																						"metafields",
																						":metafield_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "variant_id"
																						},
																						{
																							"key": "metafield_id"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"variants",
																						":variant_id",
																						"metafields",
																						":metafield_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "variant_id"
																						},
																						{
																							"key": "metafield_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete a Variant Metafield",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields",
																				":metafield_id"
																			],
																			"variable": [
																				{
																					"key": "metafield_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Metafield`.\n"
																				},
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "variant_id",
																					"value": "schema type not provided",
																					"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																				}
																			]
																		},
																		"description": "Deletes a product variant *Metafield*."
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields/:metafield_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"variants",
																						":variant_id",
																						"metafields",
																						":metafield_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "variant_id"
																						},
																						{
																							"key": "metafield_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															],
															"protocolProfileBehavior": {},
															"_postman_isSubFolder": true
														},
														{
															"name": "Get Product Variant Metafields",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id",
																		"metafields"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "",
																			"description": "Specifies the page number in a limited (paginated) list of products."
																		},
																		{
																			"key": "limit",
																			"value": "",
																			"description": "Controls the number of items per page in a limited (paginated) list of products."
																		},
																		{
																			"key": "key",
																			"value": "",
																			"description": "Filter based on a metafield's key.\n"
																		},
																		{
																			"key": "namespace",
																			"value": "",
																			"description": "Filter based on a metafield's namespace."
																		},
																		{
																			"key": "include_fields",
																			"value": "",
																			"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																		},
																		{
																			"key": "exclude_fields",
																			"value": "",
																			"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																		},
																		{
																			"key": "variant_id",
																			"value": "schema type not provided",
																			"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																		}
																	]
																},
																"description": "Returns a list of product variant *Metafields*. Optional parameters can be passed in."
															},
															"response": [
																{
																	"name": "The resource was not found.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": ""
																				},
																				{
																					"key": "limit",
																					"value": ""
																				},
																				{
																					"key": "key",
																					"value": ""
																				},
																				{
																					"key": "namespace",
																					"value": ""
																				},
																				{
																					"key": "include_fields",
																					"value": ""
																				},
																				{
																					"key": "exclude_fields",
																					"value": ""
																				}
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "variant_id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": ""
																				},
																				{
																					"key": "limit",
																					"value": ""
																				},
																				{
																					"key": "key",
																					"value": ""
																				},
																				{
																					"key": "namespace",
																					"value": ""
																				},
																				{
																					"key": "include_fields",
																					"value": ""
																				},
																				{
																					"key": "exclude_fields",
																					"value": ""
																				}
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "variant_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Create a Product Variant Metafield",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id",
																		"metafields"
																	],
																	"variable": [
																		{
																			"key": "product_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																		},
																		{
																			"key": "variant_id",
																			"value": "schema type not provided",
																			"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																		}
																	]
																},
																"description": "Creates a product variant *Metafield*.\n\n**Required Fields:**\n* permission_set\n* namespace\n* key\n* value\n\n**Read-Only Fields**\n* id"
															},
															"response": [
																{
																	"name": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields"
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "variant_id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields"
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "variant_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique-key combinations of the app's client id, namespace, key, resource_type, and resource_id.\n",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/metafields",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"variants",
																				":variant_id",
																				"metafields"
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "variant_id"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Get a Product Variant",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants",
																":variant_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "variant_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																}
															]
														},
														"description": "Returns a single product *Variant*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Product Variant",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants",
																":variant_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "variant_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																}
															]
														},
														"description": "Updates a product *Variant*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id"
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Product Variant",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants",
																":variant_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "variant_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																}
															]
														},
														"description": "Deletes a product *Variant*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Create a Variant Image",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants",
																":variant_id",
																"image"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "variant_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the variant on a product, or on an associated Price List Record.\n"
																}
															]
														},
														"description": "Creates a *Variant Image*.\n\nThe image will show on the storefront when the value is selected.\n\n **Required Fields**\n- image_file: Form posts. Files larger than 1 MB are not accepted\n- image_url: Any publicly available URL"
													},
													"response": [
														{
															"name": "Image was not valid. This is the result of a missing `image_file` field or of an incorrect file type. See the response for more details.\n",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id",
																		"image"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returns for an `image_file` larger than 1 MB.",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id",
																		"image"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "`image_url` is returned for both `image_file` and `image_url`.",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id",
																		"image"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/variants/:variant_id/image",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"variants",
																		":variant_id",
																		"image"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "variant_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Product Variants",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/variants?page=&limit=&include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"variants"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														},
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of product *Variants*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Product Variant",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/variants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"variants"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Product Variant*. \n\n**Required Fields**\n* sku\n* option_values\n\n**Read-Only Fields**\n* id\n\nVariants need to be created one at a time using this endpoint. To use a variant array and create products and variants in the same call use the [Create Products](/api-reference/catalog/catalog-api/products/createproduct) during the initial product creation."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/variants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"variants"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "options",
									"item": [
										{
											"name": "{option id}",
											"item": [
												{
													"name": "values",
													"item": [
														{
															"name": "{value id}",
															"item": [
																{
																	"name": "Get a Product Option Value",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id?include_fields=&exclude_fields=",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"options",
																				":option_id",
																				"values",
																				":value_id"
																			],
																			"query": [
																				{
																					"key": "include_fields",
																					"value": "",
																					"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																				},
																				{
																					"key": "exclude_fields",
																					"value": "",
																					"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																				}
																			],
																			"variable": [
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "option_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Option`.\n"
																				},
																				{
																					"key": "value_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier/Option Value`.\n"
																				}
																			]
																		},
																		"description": "Returns a single *Variant Option Value*. Optional parameters can be passed in."
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id?include_fields=&exclude_fields=",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"options",
																						":option_id",
																						"values",
																						":value_id"
																					],
																					"query": [
																						{
																							"key": "include_fields",
																							"value": ""
																						},
																						{
																							"key": "exclude_fields",
																							"value": ""
																						}
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "option_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "The resource was not found.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id?include_fields=&exclude_fields=",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"options",
																						":option_id",
																						"values",
																						":value_id"
																					],
																					"query": [
																						{
																							"key": "include_fields",
																							"value": ""
																						},
																						{
																							"key": "exclude_fields",
																							"value": ""
																						}
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "option_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update a Product Option Value",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"options",
																				":option_id",
																				"values",
																				":value_id"
																			],
																			"variable": [
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "option_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Option`.\n"
																				},
																				{
																					"key": "value_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier/Option Value`.\n"
																				}
																			]
																		},
																		"description": "Updates a *Variant Option Value*.\n\n**Read-Only Fields**\n* id"
																	},
																	"response": [
																		{
																			"name": "The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"options",
																						":option_id",
																						"values",
																						":value_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "option_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"options",
																						":option_id",
																						"values",
																						":value_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "option_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete a Product Option Value",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"options",
																				":option_id",
																				"values",
																				":value_id"
																			],
																			"variable": [
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "option_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Option`.\n"
																				},
																				{
																					"key": "value_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier/Option Value`.\n"
																				}
																			]
																		},
																		"description": "Deletea a *Variant Option Value*."
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values/:value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"options",
																						":option_id",
																						"values",
																						":value_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "option_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															],
															"protocolProfileBehavior": {},
															"_postman_isSubFolder": true
														},
														{
															"name": "Get all Product Option Values",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id",
																		"values"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": "",
																			"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																		},
																		{
																			"key": "exclude_fields",
																			"value": "",
																			"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																		},
																		{
																			"key": "option_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Option`.\n"
																		}
																	]
																},
																"description": "Returns a list of all *Variant Option Values*. Optional parameters can be passed in."
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values?include_fields=&exclude_fields=",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"options",
																				":option_id",
																				"values"
																			],
																			"query": [
																				{
																					"key": "include_fields",
																					"value": ""
																				},
																				{
																					"key": "exclude_fields",
																					"value": ""
																				}
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "option_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Create Product Option Values",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "product_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																		},
																		{
																			"key": "option_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Option`.\n"
																		}
																	]
																},
																"description": "Creates a *Variant Option Value*.\n\n**Required Fields**\n* label\n* sort_order\n\n**Read-Only Fields**\n* id"
															},
															"response": [
																{
																	"name": "The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"options",
																				":option_id",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "option_id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"options",
																				":option_id",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "option_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Get a Product Option",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options",
																":option_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "option_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Option`.\n"
																}
															]
														},
														"description": "Returns a single *Variant Option*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "option_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "option_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Product Option",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options",
																":option_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "option_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Option`.\n"
																}
															]
														},
														"description": "Updates a *Variant Option*.\n\n**Read-Only Fields**\n* id"
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "option_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The `Option` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "option_id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The `Option` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "option_id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Product Option",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options",
																":option_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "option_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Option`.\n"
																}
															]
														},
														"description": "Deletes a *Variant Option*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/options/:option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"options",
																		":option_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "option_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get all Product Options",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/options?page=&limit=&include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"options"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														},
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of product *Variant Options*. Optional parameters can be passed in. "
											},
											"response": [
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Product Option",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"options"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Variant Option*.\n\n**Required Fields**\n* display_name\n* type\n* option_values\n\n**Read-Only Fields**\n* id\n\n**Notes**\n\n* Only one variant option at a time can be created; individual variant options will contain an array of multiple values. \n* There are several examples listed below that create options, but the SKU’s are not updated and they are not a variant on the product. Variant SKUs must be created with a separate request.\n* Variant options will show on the storefront as an option that can be selected by the customer. A request like this could be used to add new choices to a variant that has already been created.\n* If more than one variant needs to be created use the [Create a Product](/api-reference/catalog/catalog-api/products/createproduct) endpoint."
											},
											"response": [
												{
													"name": "Option was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Option was in conflict with another option. This is the result of duplicate unique fields, such as `name`.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"options"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "modifiers",
									"item": [
										{
											"name": "{modifier id}",
											"item": [
												{
													"name": "values",
													"item": [
														{
															"name": "{value id}",
															"item": [
																{
																	"name": "image",
																	"item": [
																		{
																			"name": "Create Modifier Image",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id/image",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"modifiers",
																						":modifier_id",
																						"values",
																						":value_id",
																						"image"
																					],
																					"variable": [
																						{
																							"key": "product_id",
																							"value": "schema type not provided",
																							"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																						},
																						{
																							"key": "modifier_id",
																							"value": "schema type not provided",
																							"description": "(Required) The ID of the `Modifier`.\n"
																						},
																						{
																							"key": "value_id",
																							"value": "schema type not provided",
																							"description": "(Required) The ID of the `Modifier`.\n"
																						}
																					]
																				},
																				"description": "Creates a *Modifier Image*.\n\nThe image will show on the storefront when the value is selected.\n\n **Required Fields**\n- image_file: Form posts are the only accepted upload option."
																			},
																			"response": [
																				{
																					"name": "Untitled Response",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "",
																								"description": "(Required) "
																							},
																							{
																								"key": "Content-Type",
																								"value": "",
																								"description": "(Required) "
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id/image",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"catalog",
																								"products",
																								":product_id",
																								"modifiers",
																								":modifier_id",
																								"values",
																								":value_id",
																								"image"
																							],
																							"variable": [
																								{
																									"key": "product_id"
																								},
																								{
																									"key": "modifier_id"
																								},
																								{
																									"key": "value_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				},
																				{
																					"name": "Modifier image was not valid. This is the result of missing `image_file` fields, or of a non-URL value for the `image_file` field. See the response for more details.\n",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "",
																								"description": "(Required) "
																							},
																							{
																								"key": "Content-Type",
																								"value": "",
																								"description": "(Required) "
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id/image",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"catalog",
																								"products",
																								":product_id",
																								"modifiers",
																								":modifier_id",
																								"values",
																								":value_id",
																								"image"
																							],
																							"variable": [
																								{
																									"key": "product_id"
																								},
																								{
																									"key": "modifier_id"
																								},
																								{
																									"key": "value_id"
																								}
																							]
																						}
																					},
																					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																					"code": 422,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				},
																				{
																					"name": "The resource was not found.\n",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "",
																								"description": "(Required) "
																							},
																							{
																								"key": "Content-Type",
																								"value": "",
																								"description": "(Required) "
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id/image",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"catalog",
																								"products",
																								":product_id",
																								"modifiers",
																								":modifier_id",
																								"values",
																								":value_id",
																								"image"
																							],
																							"variable": [
																								{
																									"key": "product_id"
																								},
																								{
																									"key": "modifier_id"
																								},
																								{
																									"key": "value_id"
																								}
																							]
																						}
																					},
																					"status": "Not Found",
																					"code": 404,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		},
																		{
																			"name": "Delete Modifier Image",
																			"request": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id/image",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"modifiers",
																						":modifier_id",
																						"values",
																						":value_id",
																						"image"
																					],
																					"variable": [
																						{
																							"key": "product_id",
																							"value": "schema type not provided",
																							"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																						},
																						{
																							"key": "modifier_id",
																							"value": "schema type not provided",
																							"description": "(Required) The ID of the `Modifier`.\n"
																						},
																						{
																							"key": "value_id",
																							"value": "schema type not provided",
																							"description": "(Required) The ID of the `Modifier`.\n"
																						}
																					]
																				},
																				"description": "Deletes a *Modifier Image*.\n\nDeletes the image that was set to show when the modifier value is selected."
																			},
																			"response": [
																				{
																					"name": "Untitled Response",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "",
																								"description": "(Required) "
																							},
																							{
																								"key": "Content-Type",
																								"value": "",
																								"description": "(Required) "
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id/image",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"catalog",
																								"products",
																								":product_id",
																								"modifiers",
																								":modifier_id",
																								"values",
																								":value_id",
																								"image"
																							],
																							"variable": [
																								{
																									"key": "product_id"
																								},
																								{
																									"key": "modifier_id"
																								},
																								{
																									"key": "value_id"
																								}
																							]
																						}
																					},
																					"status": "No Content",
																					"code": 204,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		}
																	],
																	"protocolProfileBehavior": {},
																	"_postman_isSubFolder": true
																},
																{
																	"name": "Get a Modifier Value",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id?include_fields=&exclude_fields=",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"modifiers",
																				":modifier_id",
																				"values",
																				":value_id"
																			],
																			"query": [
																				{
																					"key": "include_fields",
																					"value": "",
																					"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																				},
																				{
																					"key": "exclude_fields",
																					"value": "",
																					"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																				}
																			],
																			"variable": [
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "modifier_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier`.\n"
																				},
																				{
																					"key": "value_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier/Option Value`.\n"
																				}
																			]
																		},
																		"description": "Returns a single *Modifier Value*. Optional parameters can be passed in."
																	},
																	"response": [
																		{
																			"name": "The resource was not found.\n",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id?include_fields=&exclude_fields=",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"modifiers",
																						":modifier_id",
																						"values",
																						":value_id"
																					],
																					"query": [
																						{
																							"key": "include_fields",
																							"value": ""
																						},
																						{
																							"key": "exclude_fields",
																							"value": ""
																						}
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "modifier_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id?include_fields=&exclude_fields=",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"modifiers",
																						":modifier_id",
																						"values",
																						":value_id"
																					],
																					"query": [
																						{
																							"key": "include_fields",
																							"value": ""
																						},
																						{
																							"key": "exclude_fields",
																							"value": ""
																						}
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "modifier_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update a Modifier Value",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"modifiers",
																				":modifier_id",
																				"values",
																				":value_id"
																			],
																			"variable": [
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "modifier_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier`.\n"
																				},
																				{
																					"key": "value_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier/Option Value`.\n"
																				}
																			]
																		},
																		"description": "Updates a *Modifier Value*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id"
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"modifiers",
																						":modifier_id",
																						"values",
																						":value_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "modifier_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"modifiers",
																						":modifier_id",
																						"values",
																						":value_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "modifier_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete Modifier Value",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"modifiers",
																				":modifier_id",
																				"values",
																				":value_id"
																			],
																			"variable": [
																				{
																					"key": "product_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																				},
																				{
																					"key": "modifier_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier`.\n"
																				},
																				{
																					"key": "value_id",
																					"value": "schema type not provided",
																					"description": "(Required) The ID of the `Modifier/Option Value`.\n"
																				}
																			]
																		},
																		"description": "Deletes a *Modifier Value*."
																	},
																	"response": [
																		{
																			"name": "Untitled Response",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "",
																						"description": "(Required) "
																					},
																					{
																						"key": "Content-Type",
																						"value": "",
																						"description": "(Required) "
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values/:value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"catalog",
																						"products",
																						":product_id",
																						"modifiers",
																						":modifier_id",
																						"values",
																						":value_id"
																					],
																					"variable": [
																						{
																							"key": "product_id"
																						},
																						{
																							"key": "modifier_id"
																						},
																						{
																							"key": "value_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															],
															"protocolProfileBehavior": {},
															"_postman_isSubFolder": true
														},
														{
															"name": "Get All Modifier Values",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id",
																		"values"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": "",
																			"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																		},
																		{
																			"key": "exclude_fields",
																			"value": "",
																			"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																		},
																		{
																			"key": "modifier_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Modifier`.\n"
																		}
																	]
																},
																"description": "Returns a list of all product *Modifier Values*. Optional parameters can be passed in."
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values?include_fields=&exclude_fields=",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"modifiers",
																				":modifier_id",
																				"values"
																			],
																			"query": [
																				{
																					"key": "include_fields",
																					"value": ""
																				},
																				{
																					"key": "exclude_fields",
																					"value": ""
																				}
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "modifier_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Create Modifier Value",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "product_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																		},
																		{
																			"key": "modifier_id",
																			"value": "schema type not provided",
																			"description": "(Required) The ID of the `Modifier`.\n"
																		}
																	]
																},
																"description": "Creates a *Modifier Value*.\n\n**Required Fields**\n* label\n* sort_order\n\n**Read-Only Fields**\n* id"
															},
															"response": [
																{
																	"name": "Untitled Response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"modifiers",
																				":modifier_id",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "modifier_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "",
																				"description": "(Required) "
																			},
																			{
																				"key": "Content-Type",
																				"value": "",
																				"description": "(Required) "
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"catalog",
																				"products",
																				":product_id",
																				"modifiers",
																				":modifier_id",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "product_id"
																				},
																				{
																					"key": "modifier_id"
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Get a Modifier",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"modifiers",
																":modifier_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "modifier_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Modifier`.\n"
																}
															]
														},
														"description": "Returns a single *Product Modifier*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "modifier_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "modifier_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Modifier",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"modifiers",
																":modifier_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "modifier_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Modifier`.\n"
																}
															]
														},
														"description": "Updates a *Product Modifier*."
													},
													"response": [
														{
															"name": "The `Modifier` was in conflict with another modifier or option. This is the result of duplicate unique fields, such as `name`.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "modifier_id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "modifier_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "modifier_id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Modifier",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"modifiers",
																":modifier_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "modifier_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Modifier`.\n"
																}
															]
														},
														"description": "Deletes a *Product Modifier*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers/:modifier_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"modifiers",
																		":modifier_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "modifier_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Product Modifiers",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers?page=&limit=&include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"modifiers"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														},
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of all *Product Modifiers*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers?page=&limit=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"modifiers"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Product Modifier",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"modifiers"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Product Modifier*.\n\n**Required Fields**\n* `required`\n* `display_name`\n* `type`\n\n**Read-Only Fields**\n* `id`"
											},
											"response": [
												{
													"name": "The `Modifier` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"modifiers"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"modifiers"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/modifiers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"modifiers"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "complex-rules",
									"item": [
										{
											"name": "{complex rule id}",
											"item": [
												{
													"name": "Get a Complex Rule",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"complex-rules",
																":complex_rule_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "complex_rule_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `ComplexRule`.\n"
																}
															]
														},
														"description": "Returns a single *Complex Rule*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"complex-rules",
																		":complex_rule_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "complex_rule_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"complex-rules",
																		":complex_rule_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "complex_rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Complex Rule",
													"request": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"complex-rules",
																":complex_rule_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "complex_rule_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `ComplexRule`.\n"
																}
															]
														},
														"description": "Updates a *Complex Rule*.\n\n**Required Fields**:\n- none\n\n**Read-Only Fields**:\n- complex_rule_id\n- conditions_id\n- rule_id\n- combination_id\n- id"
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"complex-rules",
																		":complex_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "complex_rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"complex-rules",
																		":complex_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "complex_rule_id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"complex-rules",
																		":complex_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "complex_rule_id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Complex Rule",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"complex-rules",
																":complex_rule_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "complex_rule_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `ComplexRule`.\n"
																}
															]
														},
														"description": "Deletes a product *Complex Rule*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules/:complex_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"complex-rules",
																		":complex_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "complex_rule_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get Complex Rules",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules?include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"complex-rules"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of all product *Complex Rules*. Optional parameters may be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"complex-rules"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Complex Rule",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"complex-rules"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a product *Complex Rule*.\n\n**Required Fields**\n- modifier_id\n- modifier_value_id\n- modifier_value_id\n- variant_id\n\n**Read-Only Fields**\n- complex_rule_id\n- conditions_id\n- rule_id\n- combination_id\n- id"
											},
											"response": [
												{
													"name": "The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"complex-rules"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"complex-rules"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/complex-rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"complex-rules"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "custom-fields",
									"item": [
										{
											"name": "{custom field id}",
											"item": [
												{
													"name": "Get a Custom Field",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"custom-fields",
																":custom_field_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "custom_field_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `CustomField`.\n"
																}
															]
														},
														"description": "Returns a single *Custom Field*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"custom-fields",
																		":custom_field_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "custom_field_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"custom-fields",
																		":custom_field_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "custom_field_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Custom Field",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"custom-fields",
																":custom_field_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "custom_field_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `CustomField`.\n"
																}
															]
														},
														"description": "Updates a *Custom Field*. \n\n**Required Fields**\n- none\n\n**Read-Only**\n- id"
													},
													"response": [
														{
															"name": "The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"custom-fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "custom_field_id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"custom-fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "custom_field_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"custom-fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "custom_field_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Custom Field",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"custom-fields",
																":custom_field_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "custom_field_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `CustomField`.\n"
																}
															]
														},
														"description": "Deletes a product *Custom Field*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"custom-fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "custom_field_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"custom-fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "custom_field_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get Custom Fields",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields?include_fields=&exclude_fields=&page=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"custom-fields"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														},
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of product *Custom Fields*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields?include_fields=&exclude_fields=&page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"custom-fields"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																},
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Custom Fields",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"custom-fields"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Custom Field*.\n\n**Required Fields:**\n- name\n- value\n\n**Read-Only:**\n- id"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"custom-fields"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"custom-fields"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The parent resource was not found.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/custom-fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"custom-fields"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "bulk-pricing-rules",
									"item": [
										{
											"name": "{bulk pricing rule id}",
											"item": [
												{
													"name": "Get a Bulk Pricing Rule",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules",
																":bulk_pricing_rule_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "bulk_pricing_rule_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `BulkPricingRule`.\n"
																}
															]
														},
														"description": "Returns a single *Bulk Pricing Rule*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource or parent resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Bulk Pricing Rule",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules",
																":bulk_pricing_rule_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "bulk_pricing_rule_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `BulkPricingRule`.\n"
																}
															]
														},
														"description": "Updates a *Bulk Pricing Rule*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n- id"
													},
													"response": [
														{
															"name": "The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource or parent resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Bulk Pricing Rule",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules",
																":bulk_pricing_rule_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "bulk_pricing_rule_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `BulkPricingRule`.\n"
																}
															]
														},
														"description": "Deletes a *Bulk Pricing Rule*."
													},
													"response": [
														{
															"name": "The resource or parent resource was not found.\n",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules/:bulk_pricing_rule_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"bulk-pricing-rules",
																		":bulk_pricing_rule_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "bulk_pricing_rule_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Bulk Pricing Rules",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?include_fields=&exclude_fields=&page=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"bulk-pricing-rules"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														},
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of *Bulk Pricing Rules*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?include_fields=&exclude_fields=&page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																},
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The parent resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?include_fields=&exclude_fields=&page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																},
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Creates a Bulk Pricing Rule",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?page=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"bulk-pricing-rules"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Bulk Pricing Rule*.\n\n**Required Fields**\n- quantity_min\n- quantity_max\n- type\n- amount\n\n**Read-Only Fields**\n- id"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The parent resource was not found.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/bulk-pricing-rules?page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"bulk-pricing-rules"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "metafields",
									"item": [
										{
											"name": "{metafield id}",
											"item": [
												{
													"name": "Get a Product Metafield",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields",
																":metafield_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																}
															]
														},
														"description": "Returns a single *Product Metafield*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"metafields",
																		":metafield_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"metafields",
																		":metafield_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Product Metafield",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields",
																":metafield_id"
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																}
															]
														},
														"description": "Updates a *Product Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Product Metafield",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields",
																":metafield_id"
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																}
															]
														},
														"description": "Deletes a *Product Metafield*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Product Metafields",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"metafields"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														},
														{
															"key": "key",
															"value": "",
															"description": "Filter based on a metafield's key.\n"
														},
														{
															"key": "namespace",
															"value": "",
															"description": "Filter based on a metafield's namespace."
														},
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of *Product Metafields*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "key",
																	"value": ""
																},
																{
																	"key": "namespace",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "key",
																	"value": ""
																},
																{
																	"key": "namespace",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Product Metafield",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/metafields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"metafields"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Product Metafield*.\n\n**Required Fields:**\n* permission_set\n* namespace\n* key\n* value\n\n**Read-Only Fields**\n* id"
											},
											"response": [
												{
													"name": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "reviews",
									"item": [
										{
											"name": "{review id}",
											"item": [
												{
													"name": "Get a Product Review",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews",
																":review_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "review_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `review` that is being operated on.\n"
																}
															]
														},
														"description": "Returns a single *Product Review*. Optional parameters maybe passed in."
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"reviews",
																		":review_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "review_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"reviews",
																		":review_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "review_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Product Review",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews",
																":review_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "review_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `review` that is being operated on.\n"
																}
															]
														},
														"description": "Updates a *Product Review*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id"
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"reviews",
																		":review_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "review_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"reviews",
																		":review_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "review_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Product Review",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews",
																":review_id"
															],
															"variable": [
																{
																	"key": "product_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
																},
																{
																	"key": "review_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `review` that is being operated on.\n"
																}
															]
														},
														"description": "Deletes a *Product Review*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/products/:product_id/reviews/:review_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"products",
																		":product_id",
																		"reviews",
																		":review_id"
																	],
																	"variable": [
																		{
																			"key": "product_id"
																		},
																		{
																			"key": "review_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get Product Reviews",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/reviews?include_fields=&exclude_fields=&page=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"reviews"
													],
													"query": [
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														},
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														}
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of all *Product Reviews*. Optional parameters can be passed in."
											},
											"response": [
												{
													"name": "The product ID does not exist.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews?include_fields=&exclude_fields=&page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																},
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "There are no reviews on this product.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews?include_fields=&exclude_fields=&page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																},
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews?include_fields=&exclude_fields=&page=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																},
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Product Review",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id/reviews",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id",
														"reviews"
													],
													"variable": [
														{
															"key": "product_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Product Review*.\n\n**Required Fields**\n- title\n- date_reviewed\n\n**Read-Only Fields**\n* id"
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The product ID does not exist.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/products/:product_id/reviews",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"products",
																":product_id",
																"reviews"
															],
															"variable": [
																{
																	"key": "product_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get a Product",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products/:product_id?include=&include_fields=&exclude_fields=&price_list_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products",
												":product_id"
											],
											"query": [
												{
													"key": "include",
													"value": "",
													"description": "Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page. (This can only be one of variants,images,custom_fields,bulk_pricing_rules,primary_image,modifiers,options,videos)"
												},
												{
													"key": "include_fields",
													"value": "",
													"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
												},
												{
													"key": "exclude_fields",
													"value": "",
													"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
												},
												{
													"key": "price_list_id",
													"value": "",
													"description": "This filter returns the product pricing with the *Price List* pricing instead. To use: \n`?price_list_id=1`.\nIf there are variants use:\n`?price_list_id=1&include=variants`"
												}
											],
											"variable": [
												{
													"key": "product_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
												}
											]
										},
										"description": "Returns a single *Product*. Optional parameters can be passed in."
									},
									"response": [
										{
											"name": "The resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id?include=&include_fields=&exclude_fields=&price_list_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id"
													],
													"query": [
														{
															"key": "include",
															"value": ""
														},
														{
															"key": "include_fields",
															"value": ""
														},
														{
															"key": "exclude_fields",
															"value": ""
														},
														{
															"key": "price_list_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "product_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id?include=&include_fields=&exclude_fields=&price_list_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id"
													],
													"query": [
														{
															"key": "include",
															"value": ""
														},
														{
															"key": "include_fields",
															"value": ""
														},
														{
															"key": "exclude_fields",
															"value": ""
														},
														{
															"key": "price_list_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "product_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Product",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products/:product_id?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products",
												":product_id"
											],
											"query": [
												{
													"key": "include_fields",
													"value": "",
													"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
												}
											],
											"variable": [
												{
													"key": "product_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
												}
											]
										},
										"description": "Updates a *Product*.\n\n**Read-Only Fields**\n- id\n- date_created\n- date_modified\n- calculated_price\n- base_variant_id\n"
									},
									"response": [
										{
											"name": "`Product` was in conflict with another product. This is caused by: duplicate unique values, such as name or SKU; a missing category, brand, or tax_class with which the product is being associated; or a conflicting bulk pricing rule.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id?include_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "product_id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "`Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id?include_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "product_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id?include_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "product_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The resource was not found.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id?include_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "product_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a Product",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products/:product_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products",
												":product_id"
											],
											"variable": [
												{
													"key": "product_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Product` to which the resource belongs.\n"
												}
											]
										},
										"description": "Deletes a *Product*."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/products/:product_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"products",
														":product_id"
													],
													"variable": [
														{
															"key": "product_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get All Products",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/catalog/products?id=&name=&sku=&upc=&price=&weight=&condition=&brand_id=&date_modified=&date_last_imported=&is_visible=&is_featured=&is_free_shipping=&inventory_level=&inventory_low=&out_of_stock=&total_sold=&type=&categories=&keyword=&keyword_context=&status=&include=&include_fields=&exclude_fields=&availability=&price_list_id=&page=&limit=&direction=&sort=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"products"
									],
									"query": [
										{
											"key": "id",
											"value": "",
											"description": "Filter items by id.\n"
										},
										{
											"key": "name",
											"value": "",
											"description": "Filter items by name.\n"
										},
										{
											"key": "sku",
											"value": "",
											"description": "Filter items by sku.\n"
										},
										{
											"key": "upc",
											"value": "",
											"description": "Filter items by upc.\n"
										},
										{
											"key": "price",
											"value": "",
											"description": "Filter items by price.\n"
										},
										{
											"key": "weight",
											"value": "",
											"description": "Filter items by weight.\n"
										},
										{
											"key": "condition",
											"value": "",
											"description": "Filter items by condition.\n (This can only be one of new,used,refurbished)"
										},
										{
											"key": "brand_id",
											"value": "",
											"description": "Filter items by brand_id.\n"
										},
										{
											"key": "date_modified",
											"value": "",
											"description": "Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`"
										},
										{
											"key": "date_last_imported",
											"value": "",
											"description": "Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`"
										},
										{
											"key": "is_visible",
											"value": "",
											"description": "Filter items by if visible on the storefront. "
										},
										{
											"key": "is_featured",
											"value": "",
											"description": "Filter items by is_featured. `0` for true, `1` for false.\n (This can only be one of 1,0)"
										},
										{
											"key": "is_free_shipping",
											"value": "",
											"description": "Filter items by is_free_shipping.\n"
										},
										{
											"key": "inventory_level",
											"value": "",
											"description": "Filter items by inventory_level.\n"
										},
										{
											"key": "inventory_low",
											"value": "",
											"description": "Filter items by inventory_low. Values: 1, 0.\n"
										},
										{
											"key": "out_of_stock",
											"value": "",
											"description": "Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.\n"
										},
										{
											"key": "total_sold",
											"value": "",
											"description": "Filter items by total_sold.\n"
										},
										{
											"key": "type",
											"value": "",
											"description": "Filter items by type: `physical` or `digital`. (This can only be one of digital,physical)"
										},
										{
											"key": "categories",
											"value": "",
											"description": "Filter items by categories.\n If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`."
										},
										{
											"key": "keyword",
											"value": "",
											"description": "Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.\n"
										},
										{
											"key": "keyword_context",
											"value": "",
											"description": "Set context for a product search. (This can only be one of shopper,merchant)"
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter items by status.\n"
										},
										{
											"key": "include",
											"value": "",
											"description": "Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page. (This can only be one of variants,images,custom_fields,bulk_pricing_rules,primary_image,modifiers,options,videos)"
										},
										{
											"key": "include_fields",
											"value": "",
											"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
										},
										{
											"key": "exclude_fields",
											"value": "",
											"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
										},
										{
											"key": "availability",
											"value": "",
											"description": "Filter items by availability. Values are: available, disabled, preorder.\n (This can only be one of available,disabled,preorder)"
										},
										{
											"key": "price_list_id",
											"value": "",
											"description": "This filter returns the product pricing with the *Price List* pricing instead. To use: \n`?price_list_id=1`.\nIf there are variants use:\n`?price_list_id=1&include=variants`"
										},
										{
											"key": "page",
											"value": "",
											"description": "Specifies the page number in a limited (paginated) list of products."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Controls the number of items per page in a limited (paginated) list of products."
										},
										{
											"key": "direction",
											"value": "",
											"description": "Sort direction. Acceptable values are: `asc`, `desc`.\n (This can only be one of asc,desc)"
										},
										{
											"key": "sort",
											"value": "",
											"description": "Field name to sort by.\n (This can only be one of id,name,sku,price,date_modified,date_last_imported,inventory_level,is_visible,total_sold)"
										}
									]
								},
								"description": "Returns a list of **Products**. Optional filter parameters can be passed in."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?id=&name=&sku=&upc=&price=&weight=&condition=&brand_id=&date_modified=&date_last_imported=&is_visible=&is_featured=&is_free_shipping=&inventory_level=&inventory_low=&out_of_stock=&total_sold=&type=&categories=&keyword=&keyword_context=&status=&include=&include_fields=&exclude_fields=&availability=&price_list_id=&page=&limit=&direction=&sort=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sku",
													"value": ""
												},
												{
													"key": "upc",
													"value": ""
												},
												{
													"key": "price",
													"value": ""
												},
												{
													"key": "weight",
													"value": ""
												},
												{
													"key": "condition",
													"value": ""
												},
												{
													"key": "brand_id",
													"value": ""
												},
												{
													"key": "date_modified",
													"value": ""
												},
												{
													"key": "date_last_imported",
													"value": ""
												},
												{
													"key": "is_visible",
													"value": ""
												},
												{
													"key": "is_featured",
													"value": ""
												},
												{
													"key": "is_free_shipping",
													"value": ""
												},
												{
													"key": "inventory_level",
													"value": ""
												},
												{
													"key": "inventory_low",
													"value": ""
												},
												{
													"key": "out_of_stock",
													"value": ""
												},
												{
													"key": "total_sold",
													"value": ""
												},
												{
													"key": "type",
													"value": ""
												},
												{
													"key": "categories",
													"value": ""
												},
												{
													"key": "keyword",
													"value": ""
												},
												{
													"key": "keyword_context",
													"value": ""
												},
												{
													"key": "status",
													"value": ""
												},
												{
													"key": "include",
													"value": ""
												},
												{
													"key": "include_fields",
													"value": ""
												},
												{
													"key": "exclude_fields",
													"value": ""
												},
												{
													"key": "availability",
													"value": ""
												},
												{
													"key": "price_list_id",
													"value": ""
												},
												{
													"key": "page",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "direction",
													"value": ""
												},
												{
													"key": "sort",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a Product",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/products?include_fields=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"products"
									],
									"query": [
										{
											"key": "include_fields",
											"value": "",
											"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
										}
									]
								},
								"description": "Creates a *Product*. Only one product can be created at a time.\n\n**Required Fields:**\n- `name`\n- `type`\n- `weight`\n- `category`\n- `price`\n\n**Read-Only Fields**\n- `id`\n- `date_created`\n- `date_modified`\n- `calculated_price`\n- `base_variant_id`\n\n**Usage Notes**\n* `POST` requests to `/products` accepts a single `video` object; to send an array of video objects, see: `/products/{product_id}/videos`"
							},
							"response": [
								{
									"name": "`Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "`Product` was in conflict with another product. This is the result of duplicate unique values, such as name or SKU; a missing or invalid `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Products",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/products?name=&sku=&price=&weight=&condition=&brand_id=&date_modified=&date_last_imported=&is_visible=&is_featured=&inventory_level=&total_sold=&type=&categories=&keyword=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"products"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter items by name.\n"
										},
										{
											"key": "sku",
											"value": "",
											"description": "Filter items by sku.\n"
										},
										{
											"key": "price",
											"value": "",
											"description": "Filter items by price.\n"
										},
										{
											"key": "weight",
											"value": "",
											"description": "Filter items by weight.\n"
										},
										{
											"key": "condition",
											"value": "",
											"description": "Filter items by condition.\n (This can only be one of new,used,refurbished)"
										},
										{
											"key": "brand_id",
											"value": "",
											"description": "Filter items by brand_id.\n"
										},
										{
											"key": "date_modified",
											"value": "",
											"description": "Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`"
										},
										{
											"key": "date_last_imported",
											"value": "",
											"description": "Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`"
										},
										{
											"key": "is_visible",
											"value": "",
											"description": "Filter items by if visible on the storefront. "
										},
										{
											"key": "is_featured",
											"value": "",
											"description": "Filter items by is_featured.\n"
										},
										{
											"key": "inventory_level",
											"value": "",
											"description": "Filter items by inventory_level.\n"
										},
										{
											"key": "total_sold",
											"value": "",
											"description": "Filter items by total_sold.\n"
										},
										{
											"key": "type",
											"value": "",
											"description": "Filter items by type: `physical` or `digital`. (This can only be one of digital,physical)"
										},
										{
											"key": "categories",
											"value": "",
											"description": "Filter items by categories.\n If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`."
										},
										{
											"key": "keyword",
											"value": "",
											"description": "Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.\n"
										}
									]
								},
								"description": "To delete *Product* objects, you must include a filter. This prevents inadvertently deleting all *Product* objects in a store.\n\n**Example**:\nTo delete products with the id's of 1,2 and 3, use `DELETE /v3/catalog/products?id:in=1,2,3`."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?name=&sku=&price=&weight=&condition=&brand_id=&date_modified=&date_last_imported=&is_visible=&is_featured=&inventory_level=&total_sold=&type=&categories=&keyword=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sku",
													"value": ""
												},
												{
													"key": "price",
													"value": ""
												},
												{
													"key": "weight",
													"value": ""
												},
												{
													"key": "condition",
													"value": ""
												},
												{
													"key": "brand_id",
													"value": ""
												},
												{
													"key": "date_modified",
													"value": ""
												},
												{
													"key": "date_last_imported",
													"value": ""
												},
												{
													"key": "is_visible",
													"value": ""
												},
												{
													"key": "is_featured",
													"value": ""
												},
												{
													"key": "inventory_level",
													"value": ""
												},
												{
													"key": "total_sold",
													"value": ""
												},
												{
													"key": "type",
													"value": ""
												},
												{
													"key": "categories",
													"value": ""
												},
												{
													"key": "keyword",
													"value": ""
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Products (Batch)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/products?include_fields=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"products"
									],
									"query": [
										{
											"key": "include_fields",
											"value": "",
											"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
										}
									]
								},
								"description": "Updates products in batches. At the time of writing, batches are limited to 10 products.\n\n**Required Fields**\n* `id` - product `id` is required for batch updates to products.\n\n**Read-Only Fields**\n- `id`\n- `date_created`\n- `date_modified`\n- `calculated_price`\n- `base_variant_id`"
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "`Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "`Product` was in conflict with another product. This is caused by: duplicate unique values, such as name or SKU; a missing category, brand, or tax_class with which the product is being associated; or a conflicting bulk pricing rule.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource was not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/products?include_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"products"
											],
											"query": [
												{
													"key": "include_fields",
													"value": ""
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "{category id}",
							"item": [
								{
									"name": "metafields",
									"item": [
										{
											"name": "{metafield id}",
											"item": [
												{
													"name": "Get a Category Metafield",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields",
																":metafield_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "category_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
																}
															]
														},
														"description": "Returns a single *Category Metafield*. Optional parameters can be passed in."
													},
													"response": [
														{
															"name": "The resource was not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"categories",
																		":category_id",
																		"metafields",
																		":metafield_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "category_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"categories",
																		":category_id",
																		"metafields",
																		":metafield_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "category_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Category Metafield",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields",
																":metafield_id"
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "category_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
																}
															]
														},
														"description": "Updates a *Category Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"categories",
																		":category_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "category_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"categories",
																		":category_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "category_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Category Metafield",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields",
																":metafield_id"
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "category_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
																}
															]
														},
														"description": "Deletes a *Category Metafield*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"categories",
																		":category_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "category_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Category Metafields",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id",
														"metafields"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														},
														{
															"key": "key",
															"value": "",
															"description": "Filter based on a metafield's key.\n"
														},
														{
															"key": "namespace",
															"value": "",
															"description": "Filter based on a metafield's namespace."
														},
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "category_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of *Metafields* on a *Category*. Optional filter parameters can be passed in."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "key",
																	"value": ""
																},
																{
																	"key": "namespace",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "key",
																	"value": ""
																},
																{
																	"key": "namespace",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Category Metafield",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id",
														"metafields"
													],
													"variable": [
														{
															"key": "category_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Cateory Metafield*.\n\n**Required Fields:**\n- permission_set\n- namespace\n- key\n- value\n\n**Read-Only Fields**\n- id"
											},
											"response": [
												{
													"name": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate, unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "image",
									"item": [
										{
											"name": "Create a Category Image",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id",
														"image"
													],
													"variable": [
														{
															"key": "category_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
														}
													]
												},
												"description": "Create a *Category Image*.\n\n **Required Fields**\n- image_file: Form posts are the only accepted upload option.\n\nOnly one image at a time can be created. \nLimit image size to 1MB.  \nTo update a *Category Image*, use the [PUT Categories](/api-reference/catalog/catalog-api/category/updatecategory) and an `image_url`. "
											},
											"response": [
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"image"
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Image was not valid. This is the result of a missing `image_file` field or an incorrect file type. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"image"
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"image"
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a Category Image",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id",
														"image"
													],
													"variable": [
														{
															"key": "category_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
														}
													]
												},
												"description": "Deletes a *Cateogory Image*."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/categories/:category_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"categories",
																":category_id",
																"image"
															],
															"variable": [
																{
																	"key": "category_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get a Category",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories/:category_id?include_fields=&exclude_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories",
												":category_id"
											],
											"query": [
												{
													"key": "include_fields",
													"value": "",
													"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
												},
												{
													"key": "exclude_fields",
													"value": "",
													"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
												}
											],
											"variable": [
												{
													"key": "category_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
												}
											]
										},
										"description": "Returns a single *Category*. Optional parameters can be passed in."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id?include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														},
														{
															"key": "exclude_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "category_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id?include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														},
														{
															"key": "exclude_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "category_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Category",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories/:category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories",
												":category_id"
											],
											"variable": [
												{
													"key": "category_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
												}
											]
										},
										"description": "Updates a *Category*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n- id"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id"
													],
													"variable": [
														{
															"key": "category_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id"
													],
													"variable": [
														{
															"key": "category_id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The resource was not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id"
													],
													"variable": [
														{
															"key": "category_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id"
													],
													"variable": [
														{
															"key": "category_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a Category",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories/:category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories",
												":category_id"
											],
											"variable": [
												{
													"key": "category_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Category` to which the resource belongs.\n"
												}
											]
										},
										"description": "Deletes a *Category*."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/categories/:category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"categories",
														":category_id"
													],
													"variable": [
														{
															"key": "category_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get All Categories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/categories?id=&name=&parent_id=&page_title=&keyword=&is_visible=&page=&limit=&include_fields=&exclude_fields=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"categories"
									],
									"query": [
										{
											"key": "id",
											"value": "",
											"description": "Filter results by a comma-seperated list of category IDs. Syntax: `?id:in=1,2,3`"
										},
										{
											"key": "name",
											"value": "",
											"description": "Filter items by name.\n"
										},
										{
											"key": "parent_id",
											"value": "",
											"description": "Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. "
										},
										{
											"key": "page_title",
											"value": "",
											"description": "Filter items by page_title.\n"
										},
										{
											"key": "keyword",
											"value": "",
											"description": "Filter items by keywords. eg. new, towel, bath"
										},
										{
											"key": "is_visible",
											"value": "",
											"description": "Filter items by if visible on the storefront. "
										},
										{
											"key": "page",
											"value": "",
											"description": "Specifies the page number in a limited (paginated) list of products."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Controls the number of items per page in a limited (paginated) list of products."
										},
										{
											"key": "include_fields",
											"value": "",
											"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
										},
										{
											"key": "exclude_fields",
											"value": "",
											"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
										}
									]
								},
								"description": "Returns a list of *Categories*. Optional filter parameters can be passed in."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories?id=&name=&parent_id=&page_title=&keyword=&is_visible=&page=&limit=&include_fields=&exclude_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories"
											],
											"query": [
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "parent_id",
													"value": ""
												},
												{
													"key": "page_title",
													"value": ""
												},
												{
													"key": "keyword",
													"value": ""
												},
												{
													"key": "is_visible",
													"value": ""
												},
												{
													"key": "page",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "include_fields",
													"value": ""
												},
												{
													"key": "exclude_fields",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a Category",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"categories"
									]
								},
								"description": "Creates a *Category*.\n\n**Required Fields**:\n- parent_id: \n\t- To create a child category, set the parent_id to the parent category.\n\t- To create a top level category, set the parent_id to 0.\n- name\n\n**Read-Only Fields**:\n- id"
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Categories",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/categories?name=&parent_id=&page_title=&keyword=&is_visible=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"categories"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter items by name.\n"
										},
										{
											"key": "parent_id",
											"value": "",
											"description": "Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. "
										},
										{
											"key": "page_title",
											"value": "",
											"description": "Filter items by page_title.\n"
										},
										{
											"key": "keyword",
											"value": "",
											"description": "Filter items by keywords. eg. new, towel, bath"
										},
										{
											"key": "is_visible",
											"value": "",
											"description": "Filter items by if visible on the storefront. "
										}
									]
								},
								"description": "By default, it deletes all *Category* objects. A filter should be added to avoid deleting all *Category* objects in a store.\n\nSending a `DELETE` to this endpoint will result in a `422` error. Move products to a new category by sending a `PUT` to the `/catalog/products/{product_id}` endpoint before deleting a category."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories?name=&parent_id=&page_title=&keyword=&is_visible=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "parent_id",
													"value": ""
												},
												{
													"key": "page_title",
													"value": ""
												},
												{
													"key": "keyword",
													"value": ""
												},
												{
													"key": "is_visible",
													"value": ""
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Category Tree",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/categories/tree",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"categories",
										"tree"
									]
								},
								"description": "Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/categories/tree",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"categories",
												"tree"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "brands",
					"item": [
						{
							"name": "{brand id}",
							"item": [
								{
									"name": "metafields",
									"item": [
										{
											"name": "{metafield id}",
											"item": [
												{
													"name": "Get a Brand Metafields",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id?include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields",
																":metafield_id"
															],
															"query": [
																{
																	"key": "include_fields",
																	"value": "",
																	"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
																},
																{
																	"key": "exclude_fields",
																	"value": "",
																	"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
																}
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "brand_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
																}
															]
														},
														"description": "Returns a *Brand Metafield*. Optional filter parameters can be passed in."
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"brands",
																		":brand_id",
																		"metafields",
																		":metafield_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "brand_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id?include_fields=&exclude_fields=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"brands",
																		":brand_id",
																		"metafields",
																		":metafield_id"
																	],
																	"query": [
																		{
																			"key": "include_fields",
																			"value": ""
																		},
																		{
																			"key": "exclude_fields",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "brand_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Brand Metafield",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields",
																":metafield_id"
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "brand_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
																}
															]
														},
														"description": "Updates a *Brand Metafield*.\n\n**Required Fields**  \n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
													},
													"response": [
														{
															"name": "The resource was not found.\n",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"brands",
																		":brand_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "brand_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"brands",
																		":brand_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "brand_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Brand Metafield",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields",
																":metafield_id"
															],
															"variable": [
																{
																	"key": "metafield_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Metafield`.\n"
																},
																{
																	"key": "brand_id",
																	"value": "schema type not provided",
																	"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
																}
															]
														},
														"description": "Deletes a *Brand Metafield*."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "",
																		"description": "(Required) "
																	},
																	{
																		"key": "Content-Type",
																		"value": "",
																		"description": "(Required) "
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields/:metafield_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"catalog",
																		"brands",
																		":brand_id",
																		"metafields",
																		":metafield_id"
																	],
																	"variable": [
																		{
																			"key": "brand_id"
																		},
																		{
																			"key": "metafield_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get All Brand Metafields",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id",
														"metafields"
													],
													"query": [
														{
															"key": "page",
															"value": "",
															"description": "Specifies the page number in a limited (paginated) list of products."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Controls the number of items per page in a limited (paginated) list of products."
														},
														{
															"key": "key",
															"value": "",
															"description": "Filter based on a metafield's key.\n"
														},
														{
															"key": "namespace",
															"value": "",
															"description": "Filter based on a metafield's namespace."
														},
														{
															"key": "include_fields",
															"value": "",
															"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
														},
														{
															"key": "exclude_fields",
															"value": "",
															"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
														}
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
														}
													]
												},
												"description": "Returns a list of *Brand Metafields*. Optional filter parameters can be passed in. "
											},
											"response": [
												{
													"name": "The resource was not found.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "key",
																	"value": ""
																},
																{
																	"key": "namespace",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields?page=&limit=&key=&namespace=&include_fields=&exclude_fields=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields"
															],
															"query": [
																{
																	"key": "page",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "key",
																	"value": ""
																},
																{
																	"key": "namespace",
																	"value": ""
																},
																{
																	"key": "include_fields",
																	"value": ""
																},
																{
																	"key": "exclude_fields",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Brand Metafield",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id",
														"metafields"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Brand Metafield*.\n\n**Required Fields**\n- permission_set\n- namespace\n- key\n- value\n\n**Read-Only Fields**\n- id"
											},
											"response": [
												{
													"name": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combination of the app's client id, namespace, key, resource_type, and resource_id.\n",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/metafields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"metafields"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "image",
									"item": [
										{
											"name": "Create a Brand Image",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id",
														"image"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
														}
													]
												},
												"description": "Creates a *Brand Image*. \n\n**Required Fields**\n- image_file: Form posts are the only accepted upload option.\n\n**Read-Only Fields**\n- id\n\nOnly one image at a time can be created. To update a *Brand Image*, use the [PUT Brands](/api-reference/catalog/catalog-api/brands/updatebrand) and an `image_url`. "
											},
											"response": [
												{
													"name": "The resource was not found.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"image"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Image was not valid. This is the result of a missing `image_file` field, or of an incorrect file type. See the response for more details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"image"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"image"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete a Brand Image",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id",
														"image"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "schema type not provided",
															"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
														}
													]
												},
												"description": "Deletes a *Brand Image*."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "",
																"description": "(Required) "
															},
															{
																"key": "Accept",
																"value": "",
																"description": "(Required) "
															}
														],
														"url": {
															"raw": "{{baseUrl}}/catalog/brands/:brand_id/image",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"catalog",
																"brands",
																":brand_id",
																"image"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get a Brand",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands/:brand_id?include_fields=&exclude_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands",
												":brand_id"
											],
											"query": [
												{
													"key": "include_fields",
													"value": "",
													"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
												},
												{
													"key": "exclude_fields",
													"value": "",
													"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
												}
											],
											"variable": [
												{
													"key": "brand_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
												}
											]
										},
										"description": "Returns a single *Brand*. Optional filter parameters can be passed in."
									},
									"response": [
										{
											"name": "The resource was not found.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id?include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														},
														{
															"key": "exclude_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id?include_fields=&exclude_fields=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id"
													],
													"query": [
														{
															"key": "include_fields",
															"value": ""
														},
														{
															"key": "exclude_fields",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Brand",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands/:brand_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands",
												":brand_id"
											],
											"variable": [
												{
													"key": "brand_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
												}
											]
										},
										"description": "Updates a *Brand*.\n\n**Required Fields**\n- None\n\n**Read-Only Fields**\n- id\n\nTo update a *Brand Image*, send a request with an `image_url`."
									},
									"response": [
										{
											"name": "The `Brand` was in conflict with another product. This is the result of duplicate unique values, such as `name`.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The `Brand` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The resource was not found.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a Brand",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands/:brand_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands",
												":brand_id"
											],
											"variable": [
												{
													"key": "brand_id",
													"value": "schema type not provided",
													"description": "(Required) The ID of the `Brand` to which the resource belongs.\n"
												}
											]
										},
										"description": "Deletes a *Brand*."
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "",
														"description": "(Required) "
													},
													{
														"key": "Content-Type",
														"value": "",
														"description": "(Required) "
													}
												],
												"url": {
													"raw": "{{baseUrl}}/catalog/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"catalog",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get All Brands",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/brands?name=&page_title=&page=&limit=&include_fields=&exclude_fields=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"brands"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter items by name.\n"
										},
										{
											"key": "page_title",
											"value": "",
											"description": "Filter items by page_title.\n"
										},
										{
											"key": "page",
											"value": "",
											"description": "Specifies the page number in a limited (paginated) list of products."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Controls the number of items per page in a limited (paginated) list of products."
										},
										{
											"key": "include_fields",
											"value": "",
											"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
										},
										{
											"key": "exclude_fields",
											"value": "",
											"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
										}
									]
								},
								"description": "Returns a list of *Brands*. Optional filter parameters can be passed in."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands?name=&page_title=&page=&limit=&include_fields=&exclude_fields=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "page_title",
													"value": ""
												},
												{
													"key": "page",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "include_fields",
													"value": ""
												},
												{
													"key": "exclude_fields",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a Brand",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/brands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"brands"
									]
								},
								"description": "Creates a *Brand*.\n\n**Required Fields**\n- name\n\n**Read-Only Fields**\n- id"
							},
							"response": [
								{
									"name": "Brand was in conflict with another brand. This is the result of duplicate unique fields such as name.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Brand was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Brands",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/brands?name=&page_title=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"brands"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter items by name.\n"
										},
										{
											"key": "page_title",
											"value": "",
											"description": "Filter items by page_title.\n"
										}
									]
								},
								"description": "By default, it deletes all *Brand* objects. A filter should be added to avoid deleting all *Brand* objects in a store."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/brands?name=&page_title=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"brands"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "page_title",
													"value": ""
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "variants",
					"item": [
						{
							"name": "Get All Variants",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/variants?id=&sku=&page=&limit=&include_fields=&exclude_fields=&product_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"variants"
									],
									"query": [
										{
											"key": "id",
											"value": "",
											"description": "Filter items by id.\n"
										},
										{
											"key": "sku",
											"value": "",
											"description": "Filter items by sku.\n"
										},
										{
											"key": "page",
											"value": "",
											"description": "Specifies the page number in a limited (paginated) list of products."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Controls the number of items per page in a limited (paginated) list of products."
										},
										{
											"key": "include_fields",
											"value": "",
											"description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned."
										},
										{
											"key": "exclude_fields",
											"value": "",
											"description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded."
										},
										{
											"key": "product_id",
											"value": "",
											"description": "A comma-separated list of ids of Products whose prices were requested. For example:\n`?product_id=:id`\n`?product_id:in=77,80,81`"
										}
									]
								},
								"description": "Returns a list of all variants in your catalog. Optional parameters can be passed in."
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/variants?id=&sku=&page=&limit=&include_fields=&exclude_fields=&product_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"variants"
											],
											"query": [
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "sku",
													"value": ""
												},
												{
													"key": "page",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "include_fields",
													"value": ""
												},
												{
													"key": "exclude_fields",
													"value": ""
												},
												{
													"key": "product_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/variants?id=&sku=&page=&limit=&include_fields=&exclude_fields=&product_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"variants"
											],
											"query": [
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "sku",
													"value": ""
												},
												{
													"key": "page",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "include_fields",
													"value": ""
												},
												{
													"key": "exclude_fields",
													"value": ""
												},
												{
													"key": "product_id",
													"value": ""
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Variants (Batch)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/variants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"variants"
									]
								},
								"description": "Creates or updates a batch of `Variant` objects. At the time of writing, the current limit is `50` variants. This limit is subject to change."
							},
							"response": [
								{
									"name": "This is the result of missing required fields, or of invalid data. See the response for more details.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/variants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"variants"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/variants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"variants"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "{{baseUrl}}/catalog/variants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"catalog",
												"variants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get a Catalog Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "",
								"description": "(Required) "
							},
							{
								"key": "Content-Type",
								"value": "",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "{{baseUrl}}/catalog/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"catalog",
								"summary"
							]
						},
						"description": "Returns a lightweight inventory summary from the BigCommerce Catalog.\n\nThe inventory summary includes:\n* \"inventory_count\"\n* \"variant_count\"\n* \"inventory_value\"\n* \"highest_variant_price\"\n* \"average_variant_price\"\n* \"lowest_variant_price\"\n* \"oldest_variant_date\"\n* \"newest_variant_date\"\n* \"primary_category_id\"\n* \"primary_category_name\""
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "{{baseUrl}}/catalog/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"catalog",
										"summary"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6d0f5ce2-1c60-4caf-b3a3-d8c6df8393cb",
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({key: 'Accept', value: 'application/json' })",
					"pm.request.headers.add({key: 'Content-Type', value: 'application/json' })",
					"pm.request.headers.add({key: 'X-Auth-Token', value: 'brjlp9j04grtja6fpso1ek4nszjrrx' })",
					"pm.request.headers.add({key: 'X-Auth-Client', value: 'p3j1844l56ryb3jbko5115w1nb8kgty' })"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "21c1bdc5-ded0-452e-a22c-cbc8c62b86d1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c1a8a2ca-258d-4e8e-ba06-c7e39f2de0dd",
			"key": "baseUrl",
			"value": "https://api.bigcommerce.com/stores/bfyy163ob0"
		}
	],
	"protocolProfileBehavior": {}
}